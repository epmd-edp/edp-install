apiVersion: batch/v1
kind: Job
metadata:
  name: db-init
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 25
  template:
    metadata:
      name: db-init
      labels:
        app: edp-install-wizard-db
    spec:
      restartPolicy: Never
      containers:
        - image: {{.Values.edp.db.image}}
          name: db-init
          command:
            - "/bin/bash"
            - "-c"
            - "psql -h $(PGHOST) -d $(POSTGRES_DB) -U $(POSTGRES_USER) -c 'CREATE SCHEMA IF NOT EXISTS \"{{.Values.edp.name}}\"; \
              DO \
              $do$ \
              BEGIN \
                 IF NOT EXISTS (SELECT 1 FROM pg_user WHERE usename = '\u005C''\u0027'admin'\u005C''\u0027') THEN \
                    CREATE USER \"admin\" WITH PASSWORD '\u005C''\u0027'$(TENANT_ADMIN_PASSWORD)'\u005C''\u0027'; \
                 END IF; \
              END \
              $do$; \
              GRANT ALL PRIVILEGES ON SCHEMA \"{{.Values.edp.name}}\" TO \"admin\"';"
          env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: super-admin-db
                  key: password
            - name: TENANT_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-admin-console
                  key: password
            - name: POSTGRES_USER
              value: super-admin
            - name: POSTGRES_DB
              value: edp-install-wizard-db
            - name: PGHOST
              value: {{if .Values.edp.db.host}}{{.Values.edp.db.host}}{{else}}"edp-install-wizard-db.{{.Values.edp.name}}"{{end}}