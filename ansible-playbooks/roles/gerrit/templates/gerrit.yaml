# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Template
metadata:
  annotations:
    description: |-
          Gerrit service, with persistent storage.
          NOTE: You must have persistent volumes available in your cluster to use this template.
    iconClass: icon-jenkins
    openshift.io/display-name: EDP Gerrit (Persistent)
    tags: ci-cd
    #template.openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/other_images/jenkins.html
    template.openshift.io/long-description: This template deploys a Gerrit server
      capable of managing OpenShift Pipeline builds and supporting OpenShift-based
      oauth login.
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/support-url: https://access.redhat.com
  name: gerrit
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: gerrit
{% if ephemeral_data == 'false' %}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: gerrit-data
  spec:
    storageClassName: ${STORAGE_CLASS_NAME}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${GERRIT_DATA_CAPACITY}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: gerrit-db
  spec:
    storageClassName: ${STORAGE_CLASS_NAME}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${GERRIT_DB_CAPACITY}
{% endif %}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: gerrit-db
    name: gerrit-db
  spec:
    ports:
    - name: db
      port: 5432
    selector:
      app: gerrit-db
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for Gerrit's https service.
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    name: gerrit
    labels:
      app: gerrit
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: gerrit
    port:
      targetPort: ui
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: gerrit
  data:
{% if vcs_integration_enabled|bool == true %}
    config: |
      Host ${VCS_GROUP_HOST}
        User git
        Port {{ vcs_ssh_port }}
        IdentityFile /var/gerrit/review_site/etc/replication_rsa_key
        StrictHostKeyChecking no
        UserKnownHostsFile /dev/null
    replication.config: |
      [gerrit]
        defaultForceUpdate = true
{% endif %}
    sshPort: ${GERRIT_SSH_PORT}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: gerrit
    name: gerrit-db
  spec:
    replicas: 1
    selector:
      app: gerrit-db
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 1200
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: gerrit-db
      spec:
        containers:
        - name: gerrit-db
          env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: gerrit-db
                key: database-name
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: gerrit-db
                key: database-user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gerrit-db
                key: database-password
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          - name: POD_IP
            valueFrom: { fieldRef: { fieldPath: status.podIP } }
          image: postgres:9.6
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: 500Mi
          ports:
            - containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 20
            failureThreshold: 15
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 20
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: gerrit-db
        serviceAccount: gerrit
        volumes:
        - name: gerrit-db
{% if ephemeral_data == 'false' %}
          persistentVolumeClaim:
            claimName: gerrit-db
{% else %}
          emptyDir: {}
{% endif %}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: gerrit
    name: gerrit
  spec:
    replicas: 1
    selector:
      app: gerrit
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 1200
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: gerrit
      spec:
        initContainers:
        - name: init-gerrit-db
          image: busybox
          command: ["sh", "-c", "while ! nc -w 1 gerrit-db 5432 </dev/null; do echo waiting for gerrit-db; sleep 10; done;"]
        containers:
        - name: gerrit
          env:
          - name: WEBURL
            value: ${GERRIT_WEB_URL}
          - name: HTTPD_LISTENURL
            value: "proxy-https://*:8080"
          - name: LISTEN_ADDR
            value: '*:${GERRIT_SSH_PORT}'
          - name: AUTH_TYPE
            value: "OAUTH"
          - name: OAUTH_KEYCLOAK_CLIENT_ID
            value: gerrit
          - name: OAUTH_KEYCLOAK_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: keycloak-gerrit
                key: secret
          - name: OAUTH_KEYCLOAK_REALM
            value: {{ tools.keycloak.realm_name }}
          - name: OAUTH_KEYCLOAK_ROOT_URL
            value: {{ tools.keycloak.web_url }}
          - name: DATABASE_TYPE
            value: postgresql
          - name: DB_PORT_5432_TCP_ADDR
            value: gerrit-db
          - name: DB_PORT_5432_TCP_PORT
            value: "5432"
          - name: DB_ENV_POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: ${GERRIT_DB_SECRET}
                key: database-name
          - name: DB_ENV_POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: ${GERRIT_DB_SECRET}
                key: database-user
          - name: DB_ENV_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${GERRIT_DB_SECRET}
                key: database-password
          - name: GERRIT_INIT_ARGS
            value: --install-plugin=commit-message-length-validator --install-plugin=download-commands --install-plugin=hooks --install-plugin=reviewnotes --install-plugin=singleusergroup --install-plugin=replication
          image: openfrontier/gerrit:${GERRIT_VERSION}
          imagePullPolicy: IfNotPresent
          name: gerrit
          securityContext:
            fsGroup: 1000
          ports:
          - name: ui
            containerPort: 8080
          - name: ssh
            containerPort: ${GERRIT_SSH_PORT}
          readinessProbe:
            initialDelaySeconds: 30
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 10
            tcpSocket:
              port: 8080
          resources:
            requests:
              memory: 500Mi
          volumeMounts:
            - mountPath: /var/gerrit/review_site
              name: gerrit-data
{% if vcs_integration_enabled|bool == true %}
            - mountPath: /var/gerrit/gerrit_configs
              name: gerrit-configs
{% endif %}
        serviceAccount: gerrit
        volumes:
          - name: gerrit-data
{% if ephemeral_data == 'false' %}
            persistentVolumeClaim:
              claimName: gerrit-data
{% else %}
            emptyDir: {}
{% endif %}
{% if vcs_integration_enabled|bool == true %}
          - name: gerrit-configs
            configMap:
              defaultMode: 420
              name: gerrit
{% endif %}
parameters:
- displayName: Gerrit version
  value: "2.14.1"
  name: GERRIT_VERSION
- displayName: Gerrit DB secret
  value: "gerrit-db"
  name: GERRIT_DB_SECRET
- description: Volume space available for Gerrit
  displayName: Gerrit Volume Capacity
  name: GERRIT_DATA_CAPACITY
  value: 2Gi
- description: Volume space available for Gerrit DB
  displayName: Gerrit database Volume Capacity
  name: GERRIT_DB_CAPACITY
  value: 2Gi
- description: Gerrit WEB URL is needed for authentication purposes
  displayName: Gerrit WEB URL
  name: GERRIT_WEB_URL
  value: "http://gerrit-test-mb.demo.edp.projects.epam.com"
{% if vcs_integration_enabled|bool == true %}
- displayName: VCS host
  value: "git.epam.com"
  name: VCS_GROUP_HOST
{% endif %}
- displayName: Gerrit ssh port
  value: "29418"
  name: GERRIT_SSH_PORT
  required: true
- displayName: Gerrit storage class name
  description: Storage class name to consume by Gerrit
  name: STORAGE_CLASS_NAME
