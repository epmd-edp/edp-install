# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

---
- block:
  - set_fact:
      vcs_tool: "{{ vcs_tool_name | lower }}"
      vcs_project_name: "{{ full_edp_name }}"

  - include_tasks: roles/api/vcs/ssh-url-generator.yml
    vars:
      vcs_group_url: "{{ vcs_group_name }}"
  when: vcs_integration_enabled|bool == true

#This should be fixed by running Gerrit from non-privileged user
- name: "Give rights to gerrit account"
  shell: "{{ ocadm }} -n {{ project_cicd }} adm policy add-scc-to-user anyuid -z gerrit"

- name: "Copy Gerrit files"
  template:
    src: "{{ item }}"
    dest: "{{ templates_dir }}/gerrit/{{ item }}"
  with_items:
    - "gerrit.yaml"
    - "gerrit-service.yaml"

- name: "Create gerrit service"
  shell: "{{ ocadm }} -n {{ project_cicd }} apply -f {{ templates_dir }}/gerrit/gerrit-service.yaml"

- name: "Find created nodePort value for ssh port"
  shell: "{{ ocadm }} -n {{ project_cicd }} get svc gerrit -o=jsonpath='{.spec.ports[?(@.name==\"ssh\")].nodePort}'"
  register: "nodePort"

- set_fact:
    gerrit_ssh_port: "{{ nodePort.stdout }}"

- name: "Update service gerrit with updated target ports for ssh"
  shell: "{{ ocadm }} -n {{ project_cicd }} patch svc gerrit --type='json' -p='[
  {\"op\":\"replace\", \"path\":\"/spec/ports/1/port\", \"value\":{{ gerrit_ssh_port }}},
  {\"op\":\"replace\", \"path\":\"/spec/ports/1/targetPort\", \"value\":{{ gerrit_ssh_port }}}]'"

- name: "Install Gerrit app"
  command: |
    {{ ocadm }} -n {{ project_cicd }} new-app -f {{ templates_dir }}/gerrit/gerrit.yaml
    -p GERRIT_VERSION={{ tools.gerrit.version }}
    -p GERRIT_DB_SECRET=gerrit-db
    -p GERRIT_DATA_CAPACITY={{ tools.gerrit.volume_capacity }}
    -p GERRIT_DB_CAPACITY={{ tools.gerrit.volume_db_capacity }}
    -p GERRIT_WEB_URL={{ tools.gerrit.web_url }}
    {{ '-p VCS_GROUP_HOST=' + vcs_group_name | urlsplit('hostname') if tools.jenkins.fs_type=='hostpath' else '' }}
    -p GERRIT_SSH_PORT={{ gerrit_ssh_port }}
    -p STORAGE_CLASS_NAME={{ storage_class_name }}
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'
#  no_log: true
