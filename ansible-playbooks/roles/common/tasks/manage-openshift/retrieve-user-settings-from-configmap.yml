# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: "Get gerrit ssh port"
  shell: |
    {{ ocadm }} -n {{ project_cicd }} get cm gerrit -o=jsonpath='{ .data.sshPort }'
  register: gerrit_ssh_port

- name: "Get user settings from config map"
  shell: |
   {{ ocadm }} -n {{ project_cicd }} get cm user-settings -o=json
  register: result

- set_fact:
    user_settings: "{{ result.stdout | from_json }}"

- name: "Setting facts"
  set_fact:
    dns_wildcard: "{{ user_settings.data.dns_wildcard }}"
    projects_suffix: "{{ user_settings.data.projects_suffix }}"
    vcs_group_name_url: "{{ user_settings.data.vcs_group_name_url }}"
    vcs_tool: "{{ user_settings.data.vcs_tool_name | lower }}"
    gerrit_ssh_port: "{{ gerrit_ssh_port.stdout }}"

- block:
  - set_fact:
      vcs_hostname: "{{ git_repo_url | urlsplit('hostname') }}"
      vcs_group_path: "{{ git_repo_url | urlsplit('path') | regex_replace('^/{1}', '') }}"
  - set_fact:
      vcs_project_path: "{{ vcs_group_path }}/{{ name }}"
      git_repo_ssh_url: "{{ vcs_hostname }}:{{ vcs_group_path }}.git"
  when: git_repo_url is defined and git_repo_url is match("http?(s)://*")

- block:
  - set_fact:
      vcs_hostname: "{{ vcs_group_name_url | urlsplit('hostname') }}"
      vcs_group_path: "{{ vcs_group_name_url | urlsplit('path') | regex_replace('^/{1}', '') }}"
  - set_fact:
      vcs_project_path: "{{ vcs_group_path }}/{{ name }}"
      git_repo_ssh_url: "{{ vcs_hostname }}:{{ vcs_group_path }}/{{ git_repo_url }}.git"
  when: git_repo_url is defined and git_repo_url is not match("http?(s)://*")

- block:
  - set_fact:
      vcs_hostname: "{{ vcs_group_name_url | urlsplit('hostname') }}"
      vcs_group_path: "{{ vcs_group_name_url | urlsplit('path') | regex_replace('^/{1}', '') }}"
  when: git_repo_url is undefined