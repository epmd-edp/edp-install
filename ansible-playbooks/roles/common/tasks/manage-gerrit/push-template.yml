# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: "Get Openshift docker registry url"
  shell: "{{ ocadm }} -n default get route docker-registry -o jsonpath='{.spec.host}'"
  register: docker_registry_url

- name: "Set variables"
  set_fact:
    docker_registry_url: "{{ docker_registry_url.stdout }}"
    
- name: "Pull project repo from gerrit"
  shell: >
   git clone ssh://project-creator@gerrit.{{ project_cicd }}:{{ gerrit_ssh_port }}/{{ gerrit_project }} &&
   scp -p -P {{ gerrit_ssh_port }} project-creator@gerrit.{{ project_cicd }}:hooks/commit-msg {{ gerrit_project }}/.git/hooks/
  args:
    chdir: "{{ templates_dir }}"

- name: "Create directories"
  file:
    path: "{{ templates_dir }}/{{ item }}"
    state: directory
  with_items:
    - "{{ gerrit_project }}/deploy-templates"

- name: "Check template for this particular application name exists"
  stat:
    path: "{{ role_path }}/templates/{{ item_map.name | lower }}.j2"
  register: template_file
  when: item_map is defined

- set_fact:
    source_template: "{{ item_map.name + '.j2' if template_file.stat.exists else item_map.language | lower + '/' + item_map.framework | regex_replace('\\(.*', '') | lower + '.j2' }}"
  when: item_map is defined and (template_file.stat.exists or ( item_map.language is defined and item_map.framework is defined))

- set_fact:
    source_pipelines: ["code-review.groovy","build.groovy"]

- block:
  - name: "Copying template for application"
    template:
      src: "{{ source_template }}"
      dest: "{{ templates_dir }}/{{ gerrit_project }}/deploy-templates/{{ item_map.name }}.yaml"
      force: no

  - name: "Copying pipelines"
    template:
      src: "{{ item }}"
      dest: "{{ templates_dir }}/{{ gerrit_project }}/{{ item }}"
      force: no
    with_items:
      - "{{ source_pipelines }}"
    when: item_map.language is defined

  - block:
      - name: "Check for existing sonar.properties"
        stat:
          path: "{{ templates_dir }}/{{ gerrit_project }}/sonar-project.properties"
        register: stat_result

      - name: "Create the file, if it doesn't exist already"
        copy:
          dest: "{{ templates_dir }}/{{ gerrit_project }}/sonar-project.properties"
          content: |
            sonar.projectKey={{ name }}
            sonar.projectName={{ name }}
            sonar.sources=src
        when: stat_result.stat.exists == False
    when: item_map.language is defined and item_map.language|lower == "javascript"

  - include_tasks: roles/common/tasks/manage-gerrit/push-commit-to-gerrit.yml
    vars:
      commit_message: "Add template for {{ gerrit_project }}"
    with_sequence: count=5

  - name: "Copying S2I template for application"
    template:
      src: "{{ item_map.language | lower }}/s2i-{{ item_map.framework | regex_replace('\\(.*', '') | lower }}.j2"
      dest: "{{ templates_dir }}/s2i-{{ item_map.name }}.yaml"
    when: item_map.language is defined and item_map.framework is defined

  - name: "Create s2i image stream for new business-app"
    command: |
      {{ ocadm }} -n {{ project_cicd }} apply -f {{ templates_dir }}/s2i-{{ item_map.name }}.yaml
    when: item_map.language is defined and item_map.framework is defined
  when: source_template is defined

- debug:
    msg: "Template for application {{ name }} is not found and wasn't push to repository"
  when: source_template is not defined