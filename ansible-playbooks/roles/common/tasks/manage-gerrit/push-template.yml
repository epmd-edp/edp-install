---
- name: "Get Openshift docker registry url"
  shell: "{{ ocadm }} -n default get route docker-registry -o jsonpath='{.spec.host}'"
  register: docker_registry_url

- name: "Get wildcard from user-settings cm"
  shell: |
   {{ ocadm }} -n {{ project_cicd }} get cm user-settings -o=jsonpath='{ .data.dns_wildcard }'
  register: dns_wildcard

- name: "Get projects suffix from user-settings config map"
  command: |
   {{ ocadm }} -n {{ project_cicd }} get cm user-settings -o=jsonpath='{ .data.projects_suffix }'
  register: projects_suffix

- name: "Get gerrit ssh port from service"
  command: "{{ ocadm }} -n {{ project_cicd }} get svc gerrit -o=jsonpath='{.spec.ports[?(@.name==\"ssh\")].nodePort}'"
  register: gerrit_ssh_port

- name: "Get GitLab URL"
  shell: |
    {{ ocadm }} -n {{ project_cicd }} get cm user-settings -o=jsonpath='{ .data.gitlab_group_name_url }'
  register: git_repo_url_default

- name: "Set variables"
  set_fact:
    dns_wildcard: "{{ dns_wildcard.stdout }}"
    docker_registry_url: "{{ docker_registry_url.stdout }}"
    edp_gerrit_project: "{{ (projects_suffix != '') | ternary('edp-' + projects_suffix.stdout, 'edp')}}"
    gerrit_ssh_port: "{{ gerrit_ssh_port.stdout }}"
    gitlab_host: "{{ git_repo_url_default.stdout }}"

- include_tasks: roles/common/tasks/manage-ssh/generate-ssh-config.yml

- name: "Pull EDP repo from gerrit"
  shell: >
   git clone ssh://project-creator@gerrit.{{ project_cicd }}:{{ gerrit_ssh_port }}/{{ edp_gerrit_project }} &&
   scp -p -P {{ gerrit_ssh_port }} project-creator@gerrit.{{ project_cicd }}:hooks/commit-msg {{ edp_gerrit_project }}/.git/hooks/
  args:
    chdir: "{{ templates_dir }}"

- name: "Create directories"
  file:
    path: "{{ templates_dir }}/{{ item }}"
    state: directory
  with_items:
    - "{{ edp_gerrit_project }}/deploy-templates"

- name: "Check template for this particular application name exists"
  stat:
    path: "{{ role_path }}/templates/{{ item_map.name | lower }}.j2"
  register: template_file
  when: item_map is defined

- set_fact:
    source_template: "{{ item_map.name + '.j2' if template_file.stat.exists else item_map.language | lower + '/' + item_map.framework | lower + '.j2' }}"
  when: item_map is defined and (template_file.stat.exists or ( item_map.language is defined and item_map.framework is defined))

- block:
  - name: "Copying template for application"
    template:
      src: "{{ source_template }}"
      dest: "{{ templates_dir }}/{{ edp_gerrit_project }}/deploy-templates/{{ item_map.name }}.yaml"

  - include_tasks: roles/common/tasks/manage-gerrit/push-templates-to-gerrit.yml
    with_sequence: count=5

  - name: "Copying S2I template for application"
    template:
      src: "{{ item_map.language | lower }}/s2i-{{ item_map.framework | lower }}.j2"
      dest: "{{ templates_dir }}/s2i-{{ item_map.name }}.yaml"
    when: item_map.language is defined and item_map.framework is defined

  - name: "Create s2i image stream for new business-app"
    command: |
      {{ ocadm }} -n {{ project_cicd }} apply -f {{ templates_dir }}/s2i-{{ item_map.name }}.yaml
    when: item_map.language is defined and item_map.framework is defined
  when: source_template is defined

- debug:
    msg: "Template for application {{ name }} is not found and wasn't push to repository"
  when: source_template is not defined