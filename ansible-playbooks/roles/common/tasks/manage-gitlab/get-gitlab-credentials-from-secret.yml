---
- name: "Get autouser secret name from user-settings cm"
  shell: |
   {{ ocadm }} -n {{ project_cicd }} get cm user-settings -o=jsonpath='{ .data.gitlab_autouser_secret }'
  register: gitlab_autouser_secret_name

- name: "Get autouser email from cicd projects secret"
  shell: >
   {{ ocadm }} -n {{ project_cicd }} get secret {{ gitlab_autouser_secret_name.stdout }}
   --template={% raw %}'{{ index .data "username" }}'{% endraw %} | base64 --decode
  register: gitlab_autouser_email

- name: "Get autouser password from cicd projects secret"
  shell: >
   {{ ocadm }} -n {{ project_cicd }} get secret {{ gitlab_autouser_secret_name.stdout }}
   --template={% raw %}'{{ index .data "password" }}'{% endraw %} | base64 --decode
  register: gitlab_autouser_password
  no_log: True

- name: "Set facts with gitlab autouser credentials"
  set_fact:
     gitlab_autouser_email: "{{ gitlab_autouser_email.stdout }}"
     gitlab_autouser_name: "{{ gitlab_autouser_email.stdout.split(\"@\")[0] }}"
     gitlab_autouser_password: "{{ gitlab_autouser_password.stdout }}"

- name: "Get ssh key from cicd projects secret"
  shell: >
    {{ ocadm }} --namespace {{ project_cicd }} get secret {{ gitlab_autouser_secret_name.stdout }}
    --template={% raw %}'{{ index .data "ssh-privatekey" }}'{% endraw %} | base64 --decode
  register: ssh_key
  no_log: True

- name: "Create file with key"
  copy:
    content: "{{ ssh_key.stdout }}"
    dest: "{{ target_gitlab_keyfile }}"
    mode: 0400