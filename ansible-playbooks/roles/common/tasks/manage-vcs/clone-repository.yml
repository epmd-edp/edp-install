# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: "Get VCS hostname and project path"
  set_fact:
     vcs_hostname: "{{ git_repo_url | urlsplit('hostname') }}"
     vcs_project_path: "{{ git_repo_url | urlsplit('path') | regex_replace('^/{1}', '') }}"
     vcs_http_url: "{{ git_repo_url }}"
  when: git_repo_url is match("http?(s)://*")

- block:
  - name: "Using git hostname which was saved in configMap while EDP installation"
    shell: |
     {{ ocadm }} -n {{ project_cicd }} get cm user-settings -o=jsonpath='{ .data.vcs_group_name_url }'
    register: git_repo_url_default

  - name: "Setting fact with default parameters"
    set_fact:
       vcs_hostname: "{{ git_repo_url_default.stdout | urlsplit('hostname') }}"
       vcs_project_path: "{{ git_repo_url_default.stdout | urlsplit('path') | regex_replace('^/{1}', '') }}"
       vcs_project_name: "{{ git_repo_url }}"

  - name: "Setting fact with default parameters"
    set_fact:
       vcs_http_url: "{{ git_repo_url_default.stdout + '/' + vcs_project_name }}"
  when: git_repo_url is not match("http?(s)://*")

- name: "Settings facts with default parameters"
  set_fact:
     git_repo_ssh_url: "{{ vcs_hostname }}:{{ vcs_project_path if git_repo_url is match('http?(s)://*')
     else vcs_project_path + '/' + vcs_project_name}}.git"
     vcs_key_path: "{{ work_dir }}/vcs-private.key"

- include_tasks: roles/common/tasks/manage-vcs/get-vcs-credentials-from-secret.yml
  vars:
    target_vcs_keyfile: "{{ vcs_key_path }}"

- name: "Clone VCS repository"
  git:
    repo: "git@{{ git_repo_ssh_url }}"
    dest: "{{ work_dir }}/{{ name }}"
    key_file: "{{ vcs_key_path }}"
    accept_hostkey: true
    force: true
  ignore_errors: true