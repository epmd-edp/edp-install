# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: "Set project_cicd variable"
  set_fact:
    project_cicd: "{{ lookup('env','PROJECT_CICD') }}"

- include_tasks: roles/common/tasks/manage-openshift/retrieve-project-settings-from-configmap.yml
  with_items:
    - { key_name: 'auto-test\.settings\.json' }

- include_tasks: roles/common/tasks/manage-openshift/retrieve-user-settings-from-configmap.yml

- set_fact:
    vcs_project_path: "{{ project_vcs_group_path }}/{{ name }}"

- include_tasks: roles/api/vcs/generate-ssh-config.yml
  vars:
    vcs_project_name: "{{ name }}"

- debug:
    msg: "{{ item_map | to_json}}"

- include_tasks: roles/api/git/check-permissions.yml
  vars:
    repo: "{{ item_map.git_repo_url }}"
    user: "{{ vcs_autouser_name }}"

- include_tasks: roles/common/tasks/manage-openshift/delete-app-settings.yml
  vars:
    vcs_project_name: "{{ name }}"
    job_name: "add-autotests-{{ name }}"
  when: permission_check_result | bool == false

- block:

  - block:
    - include_tasks: roles/common/tasks/manage-openshift/get-vcs-basic-auth-config-from-secret.yml
      vars:
        vcs_auto_user_basic_auth_secret_name: "vcs-autouser-autotest-{{ name }}-temp"

    - include_tasks: roles/api/vcs/copy-project.yml
      vars:
        vcs_project_name: "{{ name }}"

    - fail:
        msg: "Couldn't copy project to you VCS group, repository {{ name }} is already exists in {{ project_vcs_group_path }}"
      when: repository_exists | bool == true

    - include_tasks: roles/api/git/clone.yml
      with_items:
        - { repo: "{{ item_map.git_repo_url }}", 'dest': "{{ work_dir }}/{{ name }}", bare: "yes" }

    - include_tasks: roles/api/vcs/push-to-project-vcs-group.yml
      vars:
        vcs_project_name: "{{ name }}"

    - include_tasks: roles/api/vcs/ssh-url-generator.yml
      vars:
        vcs_project_name: "{{ name }}"
    when: item_map.add_repo_strategy is defined and item_map.add_repo_strategy == 'copy'

  - block:
    - include_tasks: roles/api/git/clone.yml
      with_items:
        - { repo: "{{ item_map.git_repo_url }}", 'dest': "{{ work_dir }}/{{ name }}", bare: "yes" }

    - set_fact:
        clone_repo_url: "{{ item_map.git_repo_url }}"
    when: item_map.add_repo_strategy is undefined or item_map.add_repo_strategy == 'import'

  - include_tasks: roles/common/tasks/manage-gerrit/set-up-vcs-with-gerrit.yml

  - include_tasks: roles/common/tasks/manage-jenkins/trigger-job.yml
    vars:
      job_name: "Job-provisioning"
  when: permission_check_result | bool == true