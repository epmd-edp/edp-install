- name: "Retrieve {{ item.username }} user API token from Jenkins"
  vars:
    retrieve_token_script: |
      import jenkins.security.*
      User user = User.get('{{ item.username }}')
      ApiTokenProperty t = user.getProperty(ApiTokenProperty.class)
      def token = t.getApiTokenInsecure()
      print(token)
  jenkins_script:
    script: "{{ retrieve_token_script }}"
    user: admin
    password: "{{ jenkins_admin_token is defined | ternary(tools.jenkins.admin_token, jenkins_admin_password.stdout) }}"
    url: http://jenkins.{{ project_cicd }}:8080
  register: result
  no_log: true

- set_fact:
    token: "{{ result.output }}"
  no_log: true

- name: "Create secret for {{ item.username }} user with API token"
  register: result
  ignore_errors: true
  shell: >
    {{ ocadm }} -n {{ project_cicd }} create secret generic {{ item.secret_name }}
    --from-literal=username={{ item.username }}
    --from-literal={{ item.field_name | default('token') }}={{ token }}
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'
  no_log: true
