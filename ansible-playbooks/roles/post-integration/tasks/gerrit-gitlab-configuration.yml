---
- include_tasks: roles/common/tasks/manage-gitlab/get-gitlab-credentials-from-secret.yml
  vars:
    target_gitlab_keyfile: "{{ post_integration_dir }}/gerrit/gitlab_rsa"

- name: "Login to GitLab and get CSRF token"
  uri:
    url: "https://{{ gitlab_hostname }}/oauth/token"
    method: POST
    body: 'grant_type=password&username={{ gitlab_autouser_email }}&password={{ gitlab_autouser_password }}'
  retries: 3
  delay: 3
  register: csrf_token
  until: csrf_token.status == 200

- name: "Get group id by it's name"
  uri:
    url: "
     https://{{ gitlab_hostname }}/api/v4/groups/{{ gitlab_group[1:] | replace('/', '%2F') }}\
     ?simple=true&access_token={{ csrf_token.json.access_token }}"
    method: GET
  retries: 3
  delay: 3
  register: group_id
  until: group_id.status == 200

- name: "Check if project EDP already exist in GitLab"
  uri:
    url: "
     https://{{ gitlab_hostname }}/api/v4/projects/{{ gitlab_group[1:] | replace('/', '%2F') + '%2F' + project_gitlab_edp }}\
     ?simple=true&access_token={{ csrf_token.json.access_token }}"
  ignore_errors: True
  register: edp_project_existence

- name: "Create .ssh directory"
  file:
    path: ~/.ssh
    state: directory

- block:
  - name: "Add project to the group"
    uri:
      url: "
       https://{{ gitlab_hostname }}/api/v4/projects?name={{ project_gitlab_edp }}\
       &namespace_id={{ group_id.json.id }}&access_token={{ csrf_token.json.access_token }}"
      method: POST
      status_code: 201
    retries: 3
    delay: 3
    register: output
    until: output.status == 201

  - name: "Clone GitLab repository"
    git:
      repo: "git@{{ gitlab_hostname }}:{{ gitlab_group[1:] }}/{{ project_gitlab_edp }}.git"
      dest: "{{ post_integration_dir }}/gerrit/{{ project_gitlab_edp }}"
      key_file: "{{ post_integration_dir }}/gerrit/gitlab_rsa"
      accept_hostkey: true
      force: true
    ignore_errors: true

  - name: "Copying EDP sources"
    copy:
      src: "../{{ item }}"
      dest: "{{ post_integration_dir }}/gerrit/{{ project_gitlab_edp }}"
      force: yes
    with_items:
      - "ansible-playbooks"
      - "application-pipelines"
      - "edp-images"
      - "oc-templates"
      - "README.md"

  - name: "Push to Gitlab"
    shell: |
     cd {{ post_integration_dir }}/gerrit/{{ project_gitlab_edp }}
     git config user.email "{{ gitlab_autouser_email }}"
     git config user.name "{{ gitlab_autouser_name }}"
     ssh-agent bash -c 'ssh-add "{{ post_integration_dir }}/gerrit/gitlab_rsa"; git add . \
     && git commit -m "Initial commit with EDP sources" \
     && git push origin master'
    register: push_output
    until: push_output.rc == 0
    retries: 20
    delay: 1
  when: edp_project_existence.status == 404

- block:
  - name: "Clone GitLab repository"
    git:
      repo: "git@{{ gitlab_hostname }}:{{ gitlab_group[1:] }}/{{ project_gitlab_edp }}.git"
      dest: "{{ post_integration_dir }}/gerrit/{{ project_gitlab_edp }}"
      key_file: "{{ post_integration_dir }}/gerrit/gitlab_rsa"
      accept_hostkey: true
      force: true
    ignore_errors: true
    register: clone_output
    until: "'Failed to checkout branch master' not in clone_output.msg"
    retries: 5
    delay: 1
  when: edp_project_existence.status == 200

- include_tasks: roles/common/tasks/manage-gerrit/create-gerrit-project.yml
  vars:
    gitlab_host: "{{ gitlab_hostname }}"
    project_name: "{{ project_gitlab_edp }}"

- include_tasks: roles/common/tasks/manage-gerrit/push-to-gerrit.yml
  vars:
    target_dir: "{{ post_integration_dir }}/gerrit/{{ project_gitlab_edp }}"
    project_name: "{{ project_gitlab_edp }}"