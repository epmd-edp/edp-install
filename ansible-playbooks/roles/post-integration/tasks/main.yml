# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

---
- include_tasks: apply-keycloak-cr.yml

- include_tasks: check-cr-health.yml
  with_items:
    - { project: '{{ project_cicd }}', component: 'gerrits.v2.edp.epam.com', name: 'gerrit' }

- name: "Get Gerrit ssh port"
  shell: "{{ ocadm }} -n {{ project_cicd }} get svc gerrit -o=jsonpath='{.spec.ports[?(@.name==\"ssh\")].port}'"
  register: ssh_port

- set_fact:
    jenkins_pod: "{{ ocadm }} get pods --no-headers -o custom-columns=NAME:.metadata.name | egrep 'jenkins-[0-9]+'"
    gerrit_ssh_port: "{{ ssh_port.stdout }}"
    gerrit_api_url: "http://gerrit.{{ project_cicd }}:8080/a"
    nexus_host: "nexus.{{ project_cicd }}"
    nexus_port: "8081"
    sonar_api_url: "http://sonar.{{ project_cicd }}:9000/api"
    sonar_claim_name: "roles"

- name: "Create config map with Gerrit node port"
  shell: "{{ ocadm }} -n {{ project_cicd }} create cm gerrit --from-literal=sshPort={{ gerrit_ssh_port }}"

- name: Creates work directory
  file:
    path: "{{ post_integration_dir }}/{{ item }}"
    state: directory
  with_items:
      - "{{ tools.keys() }}"
- name: "Switching to CICD project"
  shell: "{{ ocadm }} project {{ project_cicd }}"

- name: Creates directory for GitServer templates
  file:
    path: "{{ templates_dir }}/git_server"
    state: directory

- name: "Copy Gerrit GitServer template"
  template:
    src: "gerrit-server.yaml"
    dest: "{{ templates_dir }}/git_server/gerrit-server.yaml"

- name: "Get username from gerrit-ciuser-password secret"
  shell: >
    {{ ocadm }} -n {{ project_cicd }} get secret gerrit-ciuser-password
    --template={% raw %}'{{ index .data "user" }}'{% endraw %} | base64 --decode
  register: gerrit_ciuser_username

- name: "Get password from gerrit-ciuser-password secret"
  shell: >
    {{ ocadm }} -n {{ project_cicd }} get secret gerrit-ciuser-password
    --template={% raw %}'{{ index .data "password" }}'{% endraw %} | base64 --decode
  register: gerrit_ciuser_password

- set_fact:
    gerrit_jenkins_password: "{{ gerrit_ciuser_password.stdout }}"

- set_fact:
    project_vcs_hostname: "{{ vcs_group_name | urlsplit('hostname') }}"
    project_vcs_group_path: "{{ vcs_group_name | urlsplit('path') | regex_replace('^/{1}', '') }}"
    vcs_tool: "{{ vcs_tool_name | lower }}"
    vcs_project_name: "{{ full_edp_name }}"
  when: vcs_integration_enabled|bool == true

- set_fact:
    vcs_project_path: "{{ project_vcs_group_path }}/{{ full_edp_name }}"
    project_vcs_hostname_url: "{{ vcs_group_name | urlsplit('scheme') }}://{{ project_vcs_hostname }}"
  when: vcs_integration_enabled|bool == true

- include_tasks: check-cr-health.yml
  with_items:
    - { project: '{{ project_cicd }}', component: 'gerrits.v2.edp.epam.com', name: 'gerrit'  }
    - { project: '{{ project_cicd }}', component: 'sonars.v2.edp.epam.com', name: 'sonar'  }
    - { project: '{{ project_cicd }}', component: 'nexus.v2.edp.epam.com', name: 'nexus'  }
    - { project: '{{ project_cicd }}', component: 'jenkins.v2.edp.epam.com', name: 'jenkins' }

- name: "Clone jenkins token secrets"
  shell: >
    {{ ocadm }} get --export -o yaml secret {{ item }} -n {{ project_cicd }} |
    sed -e 's/{{ item }}/jenkins-token/' |
    sed -e 's/password/token/' |
    {{ ocadm }} apply -n {{ project_cicd }} -f -
  with_items:
    - "jenkins-admin-token"

- include_tasks: admin-console-configuration.yaml

- include_tasks: check-cr-health.yml
  with_items:
    - { project: '{{ project_cicd }}', component: 'adminconsoles.v2.edp.epam.com', name: 'edp-admin-console' }

- include_tasks: keycloak-configuration.yml

- include_tasks: check-deployment-health.yml
  with_items:
    - { project: '{{ project_cicd }}', service: 'gerrit' }
    - { project: '{{ project_cicd }}', service: 'nexus' }
    - { project: '{{ project_cicd }}', service: 'sonar' }
    - { project: '{{ project_cicd }}', service: 'jenkins' }

- name: "Install Gerrit GitServer CR"
  command: |
    {{ ocadm }} -n {{ project_cicd }} apply -f {{ templates_dir }}/git_server/gerrit-server.yaml
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'
  no_log: true