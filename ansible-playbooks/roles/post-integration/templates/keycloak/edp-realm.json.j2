{
  "realm":"{{ tools.keycloak.realm_name }}",
  "defaultRoles":[
    "developer"
  ],
  "enabled":true,
  "roles":{
    "realm":[
      {
        "name":"sonar-administrators"
      },
      {
        "name":"jenkins-administrators"
      },
      {
        "name":"gerrit-administrators"
      },
      {
        "name":"sonar-users"
      },
      {
        "name":"jenkins-users"
      },
      {
        "name":"gerrit-users"
      },
      {
        "name":"administrator",
        "composite":true,
        "composites":{
          "realm":[
            "sonar-administrators",
            "jenkins-administrators",
            "gerrit-administrators"
          ]
        }
      },
      {
        "name":"developer",
        "composite":true,
        "composites":{
          "realm":[
            "sonar-users",
            "jenkins-users",
            "gerrit-users"
          ]
        }
      }
    ]
  },
  "clients":[
    {
      "clientId":"jenkins",
      "enabled":true,
      "publicClient":true,
      "rootUrl":"{{ tools.jenkins.web_url }}",
      "redirectUris":[
        "{{ tools.jenkins.web_url }}/*"
      ],
      "webOrigins":[
        "{{ tools.jenkins.web_url }}"
      ],
      "adminUrl":"{{ tools.jenkins.web_url }}/"
    },
    {
      "clientId":"gerrit",
      "enabled":true,
      "publicClient":false,
      "clientAuthenticatorType":"client-secret",
      "secret":"{{ keycloak_gerrit_realm_secret }}",
      "rootUrl":"{{ tools.gerrit.web_url }}",
      "redirectUris":[
        "{{ tools.gerrit.web_url }}/*"
      ],
      "webOrigins":[
        "{{ tools.gerrit.web_url }}"
      ],
      "adminUrl":"{{ tools.gerrit.web_url }}/"
    },
    {
      "clientId":"{{ sonar_client_id }}",
      "name":"SonarQube",
      "enabled":true,
      "publicClient":true,
      "rootUrl":"{{ tools.sonar.web_url }}",
      "redirectUris":[
        "{{ tools.sonar.web_url }}/*"
      ],
      "webOrigins":[
        "{{ tools.sonar.web_url }}"
      ],
      "adminUrl":"{{ tools.sonar.web_url }}/",
      "protocolMappers":[
        {
          "name":"username",
          "protocol":"openid-connect",
          "protocolMapper":"oidc-usermodel-property-mapper",
          "consentRequired":false,
          "config":{
            "userinfo.token.claim":"true",
            "user.attribute":"username",
            "id.token.claim":"true",
            "access.token.claim":"true",
            "claim.name":"preferred_username",
            "jsonType.label":"String"
          }
        },
        {
          "name":"realm roles",
          "protocol":"openid-connect",
          "protocolMapper":"oidc-usermodel-realm-role-mapper",
          "consentRequired":false,
          "config":{
            "userinfo.token.claim":"true",
            "multivalued":"true",
            "id.token.claim":"true",
            "access.token.claim":"false",
            "claim.name":"{{ sonar_claim_name }}",
            "jsonType.label":"String"
          }
        }
      ]
    },
    {
      "clientId":"{{ tools.nexus.client_id }}",
      "enabled":true,
      "publicClient":true,
      "rootUrl":"{{ tools.nexus.web_url }}",
      "redirectUris":[
        "{{ tools.nexus.web_url }}/*"
      ],
      "webOrigins":[
        "{{ tools.nexus.web_url }}"
      ],
      "adminUrl":"{{ tools.nexus.web_url }}/"
    }
  ],
  "identityProviders":[
    {
      "alias":"openshift",
      "displayName":"EDP SSO",
      "providerId":"keycloak-oidc",
      "enabled":true,
      "config":{
        "validateSignature":"true",
        "userInfoUrl":"{{ tools.keycloak.web_url }}/auth/realms/openshift/protocol/openid-connect/userinfo",
        "tokenUrl":"{{ tools.keycloak.web_url }}/auth/realms/openshift/protocol/openid-connect/token",
        "jwksUrl":"{{ tools.keycloak.web_url }}/auth/realms/openshift/protocol/openid-connect/certs",
        "issuer":"{{ tools.keycloak.web_url }}/auth/realms/openshift",
        "useJwksUrl":"true",
        "authorizationUrl":"{{ tools.keycloak.web_url }}/auth/realms/openshift/protocol/openid-connect/auth",
        "logoutUrl":"{{ tools.keycloak.web_url }}/auth/realms/openshift/protocol/openid-connect/logout",
        "clientId":"{{ full_edp_name }}",
        "clientSecret":"{{ edp_client_secret }}"
      }
    }
  ],
  "identityProviderMappers":[
    {
      "name":"Administrator",
      "identityProviderAlias":"openshift",
      "identityProviderMapper":"keycloak-oidc-role-to-role-idp-mapper",
      "config":{
        "external.role":"{{ full_edp_name }}.administrator",
        "role":"administrator"
      }
    },
    {
      "name":"Developer",
      "identityProviderAlias":"openshift",
      "identityProviderMapper":"keycloak-oidc-role-to-role-idp-mapper",
      "config":{
        "external.role":"{{ full_edp_name }}.developer",
        "role":"developer"
      }
    },
    {
      "name":"Realm Administrator",
      "identityProviderAlias":"openshift",
      "identityProviderMapper":"keycloak-oidc-role-to-role-idp-mapper",
      "config":{
        "external.role":"{{ full_edp_name }}.administrator",
        "role":"realm-management.realm-admin"
      }
    }
  ],
  "authenticationFlows":[
    {
      "alias":"Handle Existing Account",
      "description":"Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId":"basic-flow",
      "topLevel":false,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"idp-confirm-link",
          "requirement":"REQUIRED",
          "priority":10,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"idp-email-verification",
          "requirement":"ALTERNATIVE",
          "priority":20,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "requirement":"ALTERNATIVE",
          "priority":30,
          "flowAlias":"Verify Existing Account by Re-authentication",
          "userSetupAllowed":false,
          "autheticatorFlow":true
        }
      ]
    },
    {
      "alias":"Verify Existing Account by Re-authentication",
      "description":"Reauthentication of existing account",
      "providerId":"basic-flow",
      "topLevel":false,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"idp-username-password-form",
          "requirement":"REQUIRED",
          "priority":10,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"auth-otp-form",
          "requirement":"OPTIONAL",
          "priority":20,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        }
      ]
    },
    {
      "alias":"browser",
      "description":"browser based authentication",
      "providerId":"basic-flow",
      "topLevel":true,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"auth-cookie",
          "requirement":"ALTERNATIVE",
          "priority":10,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"auth-spnego",
          "requirement":"DISABLED",
          "priority":20,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticatorConfig":"openshift-auth-config",
          "authenticator":"identity-provider-redirector",
          "requirement":"ALTERNATIVE",
          "priority":25,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "requirement":"ALTERNATIVE",
          "priority":30,
          "flowAlias":"forms",
          "userSetupAllowed":false,
          "autheticatorFlow":true
        }
      ]
    },
    {
      "alias":"clients",
      "description":"Base authentication for clients",
      "providerId":"client-flow",
      "topLevel":true,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"client-secret",
          "requirement":"ALTERNATIVE",
          "priority":10,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"client-jwt",
          "requirement":"ALTERNATIVE",
          "priority":20,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        }
      ]
    },
    {
      "alias":"direct grant",
      "description":"OpenID Connect Resource Owner Grant",
      "providerId":"basic-flow",
      "topLevel":true,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"direct-grant-validate-username",
          "requirement":"REQUIRED",
          "priority":10,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"direct-grant-validate-password",
          "requirement":"REQUIRED",
          "priority":20,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"direct-grant-validate-otp",
          "requirement":"OPTIONAL",
          "priority":30,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        }
      ]
    },
    {
      "alias":"docker auth",
      "description":"Used by Docker clients to authenticate against the IDP",
      "providerId":"basic-flow",
      "topLevel":true,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"docker-http-basic-authenticator",
          "requirement":"REQUIRED",
          "priority":10,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        }
      ]
    },
    {
      "alias":"first broker login",
      "description":"Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId":"basic-flow",
      "topLevel":true,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticatorConfig":"review profile config",
          "authenticator":"idp-review-profile",
          "requirement":"REQUIRED",
          "priority":10,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticatorConfig":"create unique user config",
          "authenticator":"idp-create-user-if-unique",
          "requirement":"ALTERNATIVE",
          "priority":20,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "requirement":"ALTERNATIVE",
          "priority":30,
          "flowAlias":"Handle Existing Account",
          "userSetupAllowed":false,
          "autheticatorFlow":true
        }
      ]
    },
    {
      "alias":"forms",
      "description":"Username, password, otp and other auth forms.",
      "providerId":"basic-flow",
      "topLevel":false,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"auth-username-password-form",
          "requirement":"REQUIRED",
          "priority":10,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"auth-otp-form",
          "requirement":"OPTIONAL",
          "priority":20,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        }
      ]
    },
    {
      "alias":"registration",
      "description":"registration flow",
      "providerId":"basic-flow",
      "topLevel":true,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"registration-page-form",
          "requirement":"REQUIRED",
          "priority":10,
          "flowAlias":"registration form",
          "userSetupAllowed":false,
          "autheticatorFlow":true
        }
      ]
    },
    {
      "alias":"registration form",
      "description":"registration form",
      "providerId":"form-flow",
      "topLevel":false,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"registration-user-creation",
          "requirement":"REQUIRED",
          "priority":20,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"registration-profile-action",
          "requirement":"REQUIRED",
          "priority":40,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"registration-password-action",
          "requirement":"REQUIRED",
          "priority":50,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"registration-recaptcha-action",
          "requirement":"DISABLED",
          "priority":60,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        }
      ]
    },
    {
      "alias":"reset credentials",
      "description":"Reset credentials for a user if they forgot their password or something",
      "providerId":"basic-flow",
      "topLevel":true,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"reset-credentials-choose-user",
          "requirement":"REQUIRED",
          "priority":10,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"reset-credential-email",
          "requirement":"REQUIRED",
          "priority":20,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"reset-password",
          "requirement":"REQUIRED",
          "priority":30,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        },
        {
          "authenticator":"reset-otp",
          "requirement":"OPTIONAL",
          "priority":40,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        }
      ]
    },
    {
      "alias":"saml ecp",
      "description":"SAML ECP Profile Authentication Flow",
      "providerId":"basic-flow",
      "topLevel":true,
      "builtIn":true,
      "authenticationExecutions":[
        {
          "authenticator":"http-basic-authenticator",
          "requirement":"REQUIRED",
          "priority":10,
          "userSetupAllowed":false,
          "autheticatorFlow":false
        }
      ]
    }
  ],
  "authenticatorConfig":[
    {
      "alias":"create unique user config",
      "config":{
        "require.password.update.after.registration":"false"
      }
    },
    {
      "alias":"review profile config",
      "config":{
        "update.profile.on.first.login":"missing"
      }
    },
    {
      "alias":"openshift-auth-config",
      "config":{
        "defaultProvider":"openshift"
      }
    }
  ]
}