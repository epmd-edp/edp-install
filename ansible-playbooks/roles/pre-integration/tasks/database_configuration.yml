---
- set_fact:
    random_password: "{{ lookup('password', '/dev/null length=10 chars=ascii_letters') }}"
  no_log: true

- name: "Create secret for DB User"
  register: result
  ignore_errors: true
  command: |
    {{ ocadm }} -n {{ project_cicd }} create secret generic db-admin-console
    --from-literal=username={{ edp_name }}-admin
    --from-literal=password={{ random_password }}
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'
  no_log: true

- name: "Retrieve database admin name from secret"
  shell: >
    {{ ocadm }} -n {{ operators_deploy_project }} get secret {{ tools.admin_console.db_secret }}
    --template={% raw %}'{{ index .data "username" }}'{% endraw %} | base64 --decode
  register: admin_console_db_username
  no_log: true

- name: "Get username for Admin Console DB tenant admin"
  shell: >
    {{ ocadm }} -n {{ project_cicd }} get secret db-admin-console
    --template={% raw %}'{{ index .data "username" }}'{% endraw %} | base64 --decode
  register: admin_console_db_tenant_admin_username

- name: "Get password for Admin Console DB tenant admin"
  shell: >
    {{ ocadm }} -n {{ project_cicd }} get secret db-admin-console
    --template={% raw %}'{{ index .data "password" }}'{% endraw %} | base64 --decode
  register: admin_console_db_tenant_admin_password
  no_log: true

- set_fact:
    admin_console_db_tenant_admin_username: "{{ admin_console_db_tenant_admin_username.stdout }}"
    admin_console_db_tenant_admin_password: "{{ admin_console_db_tenant_admin_password.stdout }}"
    admin_console_db_admin_username: "{{ admin_console_db_username.stdout }}"
    admin_console_db_pod: "{{ ocadm }} -n {{ operators_deploy_project }} get pods \
                          --no-headers -o custom-columns=NAME:.metadata.name | egrep 'edp-install-wizard-db-[0-9]+'"
  no_log: true

- name: "Create schema in database"
  shell: "{{ ocadm }} -n {{ operators_deploy_project }} exec -i $({{ admin_console_db_pod }}) \
         -- psql --dbname={{ shared_database }} -c 'CREATE SCHEMA \"{{ edp_name }}\";' -U {{ admin_console_db_admin_username }}"

- name: "Create tenant user in database"
  raw: "{{ ocadm }} -n {{ operators_deploy_project }} exec -i $({{ admin_console_db_pod }}) \
         -- psql --dbname={{ shared_database }} {{ admin_console_db_admin_username }} \
         -c 'CREATE USER \"{{ admin_console_db_tenant_admin_username }}\" \
         WITH PASSWORD '\u005C''\u0027'{{ admin_console_db_tenant_admin_password }}'\u005C''\u0027';'"

- name: "Grant all privileges for tenant user in database scheme"
  shell: "{{ ocadm }} -n {{ operators_deploy_project }} exec -i $({{ admin_console_db_pod }}) \
         -- psql --dbname={{ shared_database }} -c 'GRANT ALL PRIVILEGES ON SCHEMA \"{{ edp_name }}\" \
         TO \"{{ admin_console_db_tenant_admin_username }}\";' -U {{ admin_console_db_admin_username }}"