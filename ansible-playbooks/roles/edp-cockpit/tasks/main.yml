--- # Cockpit full installation
- name: "Copy EDP-Cockpit templates"
  template:
    src: "{{ item }}"
    dest: "{{ templates_dir }}/cockpit/{{ item }}"
  with_items:
    - "edp-cockpit.yaml"
    - "app-types.json"
    - "autotest-types.json"
    - "quickstart.json"

- name: "Set docker image version in add-application template"
  replace:
    path: '{{ item }}'
    regexp: '\${DOCKER_IMAGE}'
    replace: "{{ edp_version }}"
  with_items:
    - '{{ templates_dir }}/add-business-application.yaml'
    - '{{ templates_dir }}/add-autotests.yaml'
    - '{{ templates_dir }}/add-environments.yaml'
    - '{{ templates_dir }}/add-service.yaml'

- name: "Install config map for storing app types. Install config map for storing autotest types.
        Bind role with service account. Upload templates for cockpit"
  shell: "{{ item }}"
  with_items:
    - "{{ ocadm }} -n {{ project_cockpit }} create configmap app-types
     --from-file=app-types.json={{ templates_dir }}/cockpit/app-types.json
     --from-file=autotest-types.json={{ templates_dir }}/cockpit/autotest-types.json"
    - "{{ ocadm }} adm policy add-cluster-role-to-user cluster-admin system:serviceaccount:{{ project_cockpit }}:cockpit"
    - "{{ ocadm }} create -f {{ templates_dir }}/add-business-application.yaml"
    - "{{ ocadm }} create -f {{ templates_dir }}/add-autotests.yaml"
    - "{{ ocadm }} create -f {{ templates_dir }}/add-environments.yaml"
    - "{{ ocadm }} create -f {{ templates_dir }}/add-service.yaml"
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

- name: "Install config map for storing msra quickstart information"
  shell: >
    {{ ocadm }} -n {{ project_cockpit }} create configmap msra
    --from-file=quickstart.json={{ templates_dir }}/cockpit/quickstart.json
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

- name: "Install EDP-Cockpit app"
  command: |
    {{ ocadm }} -n {{ project_cockpit }} new-app -f {{ templates_dir }}/cockpit/edp-cockpit.yaml
    -p EDP_COCKPIT_VERSION={{ tools.cockpit.version }}
    -p PROJECT_CICD={{ project_cicd }}
    -p OPENSHIFT_TRUST_CERTIFICATES={{ tools.cockpit.openshift_trust_certificates }}
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

- name: "Copy cockpit SA and assign SCC"
  shell: "{{ item }}"
  with_items:
    - "{{ ocadm }} -n {{ project_cockpit }} get sa cockpit -o json | jq '.metadata.namespace = \"{{ project_cicd }}\"' | {{ ocadm }} create -f -"
    - "{{ ocadm }} adm policy add-cluster-role-to-user cluster-admin system:serviceaccount:{{ project_cicd }}:cockpit"
    - "{{ ocadm }} adm policy add-scc-to-user edp-deploy system:serviceaccount:{{ project_cicd }}:cockpit"
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'