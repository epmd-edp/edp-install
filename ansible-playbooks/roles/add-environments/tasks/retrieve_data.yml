# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Creates work directory
  file:
    path={{ templates_dir }}
    state=directory

- set_fact:
    project_cicd: "{{ lookup('env','PROJECT_CICD') }}"

- name: "Get projects suffix from user-settings config map"
  command: |
   {{ ocadm }} -n {{ project_cicd }} get cm user-settings -o=jsonpath='{ .data.projects_suffix }'
  register: projects_suffix

- name: "Get environments settings from project-settings config map"
  command: |
   {{ ocadm }} -n {{ project_cicd }} get cm project-settings -o=jsonpath='{ .data.env\.settings\.json }'
  register: env_settings_json

- name: "Get applications settings from project-settings config map"
  command: |
   {{ ocadm }} -n {{ project_cicd }} get cm project-settings -o=jsonpath='{ .data.app\.settings\.json }'
  register: app_settings_json

- name: "Get gerrit ssh port from service"
  command: "{{ ocadm }} -n {{ project_cicd }} get svc gerrit -o=jsonpath='{.spec.ports[?(@.name==\"ssh\")].nodePort}'"
  register: gerrit_ssh_port

- name: "Convert json to map"
  set_fact:
    env_map: "{{ env_settings_json.stdout| from_json }}"
    app_map: "{{ app_settings_json.stdout| from_json }}"
    gerrit_ssh_port: "{{ gerrit_ssh_port.stdout }}"
    projects_suffix: "{{ projects_suffix.stdout }}"
    env_names_list: "{{ env_settings_json.stdout| from_json | map(attribute='name') | list | map('regex_replace', '(.*)', '\\1-meta') | list }}"

- debug:
    msg: "Found environment: {{ item.name | lower }}"
  with_items: "{{ env_map | list }}"
  when: env_map | list | length > 0