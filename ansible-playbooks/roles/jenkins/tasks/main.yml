# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

--- # Jenkins full installation
- name: "Copy Jenkins template"
  template:
    src: "{{ item }}"
    dest: "{{ templates_dir }}/jenkins/{{ item }}"
  with_items:
    - "jenkins-{{ tools.jenkins.fs_type }}.yaml"

- name: "Install Jenkins app"
  shell: >
    {{ ocadm }} -n {{ project_cicd }} new-app -f {{ templates_dir }}/jenkins/jenkins-{{ tools.jenkins.fs_type }}.yaml
    -p JENKINS_PASSWORD={{ tools.jenkins.password }}
    -p JENKINS_MAVEN_CACHE_VOLUME_CAPACITY={{ tools.jenkins.maven_cache_volume_capacity }}
    -p JENKINS_FRONTEND_IMAGE={{ tools.jenkins.frontend_image }}
    -p JENKINS_IMAGE_VERSION={{ tools.jenkins.jenkins_image }}
    -p JENKINS_BACKEND_IMAGE={{ tools.jenkins.backend_image }}
    -p JENKINS_UI_URL={{ tools.jenkins.web_url }}
    {{ '-p JENKINS_HOST_PATH_VOLUME=' + tools.jenkins.host_path_volume if tools.jenkins.fs_type=='hostpath' else '-p JENKINS_VOLUME_CAPACITY=' + tools.jenkins.volume_capacity }}
    -p STORAGE_CLASS_NAME={{ storage_class_name }}
    --dry-run -o yaml | {{ ocadm }} -n {{ project_cicd }} apply -f -
  register: result
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'
  no_log: true

- name: "Assign necessary permissions for EDP Jenkins"
  shell: >
    {{ ocadm }} {{ item }}
  with_items:
  - "create clusterrolebinding {{ edp_name }}-edp-jenkins --clusterrole edp-jenkins --serviceaccount={{ project_cicd }}:jenkins --dry-run -o yaml | {{ ocadm }} apply -f -"
  register: result
  changed_when: '"already" not in result.stderr'
  failed_when:
  - 'result.rc != 0'
  - '"already" not in result.stderr'
