# Copyright 2018 EPAM Systems.

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.

# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Template
labels:
  template: edp-jenkins-persistent-template
metadata:
  annotations:
    description: |-
      Jenkins service, with persistent storage.
      NOTE: You must have persistent volumes available in your cluster to use this template.
    iconClass: icon-jenkins
    openshift.io/display-name: EDP Jenkins (Persistent)
    tags: instant-app,jenkins
    template.openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/other_images/jenkins.html
    template.openshift.io/long-description: This template deploys a Jenkins server
      capable of managing OpenShift Pipeline builds and supporting OpenShift-based
      oauth login.
  name: jenkins
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: jenkins
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRole
  metadata:
    name: edp-jenkins
  rules:
  - apiGroups:
    - '*'
    attributeRestrictions: null
    resourceNames:
    - keycloak
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - '*'
    attributeRestrictions: null
    resources:
    - projectrequests
    - projects
    - rolebindings
    - securitycontextconstraints
    verbs:
    - get
    - list
    - create
  - apiGroups:
    - '*'
    attributeRestrictions: null
    resources:
    - securitycontextconstraints
    verbs:
    - update
  - apiGroups:
    - '*'
    attributeRestrictions: null
    resources:
    - codebases
    verbs:
    - get
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    name: edp-jenkins
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: jenkins
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    name: jenkins
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: jenkins
{% if ephemeral_data == 'false' %}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: jenkins-data
  spec:
    storageClassName: ${STORAGE_CLASS_NAME}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${JENKINS_VOLUME_CAPACITY}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: maven-cache
  spec:
    storageClassName: ${STORAGE_CLASS_NAME}
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${JENKINS_MAVEN_CACHE_VOLUME_CAPACITY}
{% endif %}
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: project-settings
  data:
    app.settings.json: |-
      []
    env.settings.json: |-
      []
    auto-test.settings.json: |-
      []
    service.settings.json: |-
      []
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: jenkins
    labels:
      app: jenkins
  spec:
    replicas: 1
    selector:
      app: jenkins
    strategy:
      type: Recreate
      recreateParams:
        timeoutSeconds: 6000
    template:
      metadata:
        labels:
          app: jenkins
      spec:
        containers:
        - capabilities: {}
          env:
          - name: GERRIT_SSH_PORT
            valueFrom:
              configMapKeyRef:
                name: gerrit
                key: sshPort
          - name: OPENSHIFT_ENABLE_OAUTH
            value: "false"
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: KUBERNETES_MASTER
            value: https://kubernetes.default:443
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JNLP_SERVICE_NAME
            value: jenkins-jnlp
          - name: JENKINS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${JENKINS_SECRET}
                key: password
          - name: JENKINS_UI_URL
            value: ${JENKINS_UI_URL}
          image: ${JENKINS_IMAGE_VERSION}
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /login
              port: 8080
            initialDelaySeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          name: jenkins
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          resources:
            requests:
              memory: 500Mi
          volumeMounts:
          - mountPath: /var/lib/jenkins
            name: jenkins-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccountName: jenkins
        volumes:
        - name: jenkins-data
{% if ephemeral_data == 'false' %}
          persistentVolumeClaim:
            claimName: jenkins-data
{% else %}
          emptyDir: {}
{% endif %}
- apiVersion: v1
  kind: Service
  metadata:
    name: jenkins-jnlp
    labels:
      app: jenkins
  spec:
    ports:
    - name: agent
      nodePort: 0
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      app: jenkins
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp",
        "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: "true"
    name: jenkins
    labels:
      app: jenkins
  spec:
    ports:
    - name: web
      #nodePort: 0
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: jenkins
    sessionAffinity: None
    type: NodePort
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      role: jenkins-slave
    name: jenkins-slaves
  data:
    npm-template: |-
      <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
        <inheritFrom></inheritFrom>
        <name>npm</name>
        <namespace></namespace>
        <privileged>false</privileged>
        <alwaysPullImage>false</alwaysPullImage>
        <instanceCap>2147483647</instanceCap>
        <slaveConnectTimeout>100</slaveConnectTimeout>
        <idleMinutes>60</idleMinutes>
        <activeDeadlineSeconds>0</activeDeadlineSeconds>
        <label>npm</label>
        <serviceAccount>jenkins</serviceAccount>
        <nodeSelector></nodeSelector>
        <nodeUsageMode>NORMAL</nodeUsageMode>
        <customWorkspaceVolumeEnabled>false</customWorkspaceVolumeEnabled>
        <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume">
          <memory>false</memory>
        </workspaceVolume>
        <volumes/>
        <containers>
          <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
            <name>jnlp</name>
            <image>${JENKINS_FRONTEND_IMAGE}</image>
            <privileged>false</privileged>
            <alwaysPullImage>false</alwaysPullImage>
            <workingDir>/tmp</workingDir>
            <command></command>
            <args>${computer.jnlpmac} ${computer.name}</args>
            <ttyEnabled>false</ttyEnabled>
            <resourceRequestCpu></resourceRequestCpu>
            <resourceRequestMemory></resourceRequestMemory>
            <resourceLimitCpu></resourceLimitCpu>
            <resourceLimitMemory></resourceLimitMemory>
            <envVars/>
            <ports/>
          </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
        </containers>
        <envVars/>
        <annotations/>
        <imagePullSecrets/>
        <podRetention class="org.csanchez.jenkins.plugins.kubernetes.pod.retention.Default"/>
      </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
    maven-template: |-
      <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
        <inheritFrom></inheritFrom>
        <name>maven</name>
        <namespace></namespace>
        <privileged>false</privileged>
        <alwaysPullImage>false</alwaysPullImage>
        <instanceCap>2147483647</instanceCap>
        <slaveConnectTimeout>100</slaveConnectTimeout>
        <idleMinutes>5</idleMinutes>
        <activeDeadlineSeconds>0</activeDeadlineSeconds>
        <label>maven</label>
        <serviceAccount>jenkins</serviceAccount>
        <nodeSelector></nodeSelector>
        <nodeUsageMode>NORMAL</nodeUsageMode>
        <customWorkspaceVolumeEnabled>false</customWorkspaceVolumeEnabled>
        <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume">
          <memory>false</memory>
        </workspaceVolume>
        <volumes>
{% if ephemeral_data == 'false' %}
          <org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
            <mountPath>/opt/caches/maven</mountPath>
            <claimName>maven-cache</claimName>
            <readOnly>false</readOnly>
          </org.csanchez.jenkins.plugins.kubernetes.volumes.PersistentVolumeClaim>
{% else %}
          <org.csanchez.jenkins.plugins.kubernetes.volumes.EmptyDirVolume>
            <mountPath>/opt/caches/maven</mountPath>
            <memory>false</memory>
          </org.csanchez.jenkins.plugins.kubernetes.volumes.EmptyDirVolume>
{% endif %}
        </volumes>
        <containers>
          <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
            <name>jnlp</name>
            <image>${JENKINS_BACKEND_MAVEN_IMAGE}</image>
            <privileged>false</privileged>
            <alwaysPullImage>false</alwaysPullImage>
            <workingDir>/tmp</workingDir>
            <command></command>
            <args>${computer.jnlpmac} ${computer.name}</args>
            <ttyEnabled>false</ttyEnabled>
            <resourceRequestCpu></resourceRequestCpu>
            <resourceRequestMemory></resourceRequestMemory>
            <resourceLimitCpu></resourceLimitCpu>
            <resourceLimitMemory></resourceLimitMemory>
            <ports/>
          </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
        </containers>
        <envVars/>
        <annotations/>
        <imagePullSecrets/>
        <podRetention class="org.csanchez.jenkins.plugins.kubernetes.pod.retention.Default"/>
      </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
    gradle-template: |-
      <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
        <inheritFrom></inheritFrom>
        <name>gradle</name>
        <namespace></namespace>
        <privileged>false</privileged>
        <alwaysPullImage>true</alwaysPullImage>
        <instanceCap>2147483647</instanceCap>
        <slaveConnectTimeout>100</slaveConnectTimeout>
        <idleMinutes>5</idleMinutes>
        <activeDeadlineSeconds>0</activeDeadlineSeconds>
        <label>gradle</label>
        <serviceAccount>jenkins</serviceAccount>
        <nodeSelector></nodeSelector>
        <nodeUsageMode>NORMAL</nodeUsageMode>
        <customWorkspaceVolumeEnabled>false</customWorkspaceVolumeEnabled>
        <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume">
          <memory>false</memory>
        </workspaceVolume>
        <volumes/>
        <containers>
          <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
            <name>jnlp</name>
            <image>${JENKINS_BACKEND_GRADLE_IMAGE}</image>
            <privileged>false</privileged>
            <alwaysPullImage>true</alwaysPullImage>
            <workingDir>/tmp</workingDir>
            <command></command>
            <args>${computer.jnlpmac} ${computer.name}</args>
            <ttyEnabled>false</ttyEnabled>
            <resourceRequestCpu></resourceRequestCpu>
            <resourceRequestMemory></resourceRequestMemory>
            <resourceLimitCpu></resourceLimitCpu>
            <resourceLimitMemory></resourceLimitMemory>
            <envVars/>
            <ports/>
          </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
        </containers>
        <envVars/>
        <annotations/>
        <imagePullSecrets/>
        <podRetention class="org.csanchez.jenkins.plugins.kubernetes.pod.retention.Default"/>
      </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
    dotnet-template: |-
      <org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
        <inheritFrom></inheritFrom>
        <name>dotnet</name>
        <namespace></namespace>
        <privileged>false</privileged>
        <alwaysPullImage>false</alwaysPullImage>
        <instanceCap>2147483647</instanceCap>
        <slaveConnectTimeout>100</slaveConnectTimeout>
        <idleMinutes>5</idleMinutes>
        <activeDeadlineSeconds>0</activeDeadlineSeconds>
        <label>dotnet</label>
        <serviceAccount>jenkins</serviceAccount>
        <nodeSelector></nodeSelector>
        <nodeUsageMode>NORMAL</nodeUsageMode>
        <customWorkspaceVolumeEnabled>false</customWorkspaceVolumeEnabled>
        <workspaceVolume class="org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume">
          <memory>false</memory>
        </workspaceVolume>
        <volumes/>
        <containers>
          <org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
            <name>jnlp</name>
            <image>registry.centos.org/dotnet/dotnet-20-jenkins-slave-centos7:latest</image>
            <privileged>false</privileged>
            <alwaysPullImage>false</alwaysPullImage>
            <workingDir>/tmp</workingDir>
            <command></command>
            <args>${computer.jnlpmac} ${computer.name}</args>
            <ttyEnabled>false</ttyEnabled>
            <resourceRequestCpu></resourceRequestCpu>
            <resourceRequestMemory></resourceRequestMemory>
            <resourceLimitCpu></resourceLimitCpu>
            <resourceLimitMemory></resourceLimitMemory>
            <envVars/>
            <ports/>
          </org.csanchez.jenkins.plugins.kubernetes.ContainerTemplate>
        </containers>
        <envVars/>
        <annotations/>
        <imagePullSecrets/>
        <podRetention class="org.csanchez.jenkins.plugins.kubernetes.pod.retention.Default"/>
      </org.csanchez.jenkins.plugins.kubernetes.PodTemplate>
#--------------------------------------------------------------------------------------
parameters:
- description: Jenkins frontent external URL
  displayName: Jenkins frontent external URL
  name: JENKINS_UI_URL
  value: "http://jenkins:8080"
- description: Password for the 'admin' account when using default Jenkin authentication.
  displayName: Jenkins admin initial password
  name: JENKINS_SECRET
  value: jenkins-passwords
- description: Volume space available for data
  displayName: Volume Capacity
  name: JENKINS_VOLUME_CAPACITY
  required: true
  value: 5Gi
- displayName: Maven Cache Volume Capacity
  description: Volume space available for maven cache data
  name: JENKINS_MAVEN_CACHE_VOLUME_CAPACITY
  required: true
  value: 5Gi
- description: Frontend docker image.
  displayName: Frontend docker image.
  name: JENKINS_FRONTEND_IMAGE
  value: "openshift/jenkins-agent-nodejs-8-centos7:v3.10"
- description: Backend docker image.
  displayName: Backend docker image.
  name: JENKINS_BACKEND_MAVEN_IMAGE
  value: "openshift/jenkins-slave-maven-centos7"
- description: Backend gradle docker image.
  displayName: Backend gradle docker image.
  name: JENKINS_BACKEND_GRADLE_IMAGE
  value: "epamedp/jenkins-slave-gradle-openshift:1.10.0"
- description: Jenkins EDP docker image.
  displayName: Jenkins EDP docker image.
  name: JENKINS_IMAGE_VERSION
  value: "docker-registry-default.main.edp.projects.epam.com/infra/edp-jenkins:latest"
- displayName: Jenkins storage class name
  description: Storage class name to consume by Jenkins
  name: STORAGE_CLASS_NAME
