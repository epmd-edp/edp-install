- name: "Copy secret from deploy project to cicd for Gitlab"
  shell: >
   {{ ocadm }} get secret {{ gitlab_auto_user_secret }} -o json
   --namespace edp-deploy | jq '.metadata.namespace = "{{ project_cicd }}"' | {{ ocadm }} create -f -

- name: "Copy secret from deploy project to cockpit for Keycloak"
  shell: >
   {{ ocadm }} get secret {{ keycloak_admin_user_secret }} -o json
   --namespace edp-deploy | jq '.metadata.namespace = "{{ project_cockpit }}"' | {{ ocadm }} create -f -

- name: "Generate ssh key for gerrit admin"
  shell: cat /dev/zero | ssh-keygen -b 4096 -t rsa -f id_admin_rsa -C "admin@example.com" -q -N ""

- name: "Create secret for gerrit admin"
  register: result
  ignore_errors: true
  command: |
    {{ ocadm }} -n {{ project_cicd }} create secret generic gerrit-admin
    --from-literal=password={{ secrets.gerrit_admin.password }}
    --from-file=id_admin_rsa=id_admin_rsa
    --from-file=id_admin_rsa.pub=id_admin_rsa.pub
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

- name: "Create secret {{ tools.gerrit.db_secret }} for Gerrit"
  register: result
  ignore_errors: true
  command: |
    {{ ocadm }} -n {{ project_cicd }} create secret generic gerrit-db 
    --from-literal=database-name={{ secrets.gerrit_db.db_name }} 
    --from-literal=database-user={{ secrets.gerrit_db.db_user }} 
    --from-literal=database-password={{ secrets.gerrit_db.db_password }}
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

- name: "Create secret {{ tools.gerrit.gitlab_oauth }} for Gerrit"
  register: result
  ignore_errors: true
  command: |
    {{ ocadm }} -n {{ project_cicd }} create secret generic {{ tools.gerrit.gitlab_oauth }} 
    --from-literal=secret={{ secrets.gitlab_oauth.secret }} 
    --from-literal=id={{ secrets.gitlab_oauth.id }}
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

- name: "Create secret {{ tools.sonar.db_secret }} for Sonar"
  register: result
  ignore_errors: true
  command: |
    {{ ocadm }} -n {{ project_cicd }} create secret generic sonar-db 
    --from-literal=database-name={{ secrets.sonar_db.db_name }} 
    --from-literal=database-user={{ secrets.sonar_db.db_user }} 
    --from-literal=database-password={{ secrets.sonar_db.db_password }}
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

- name: "Create secret for Keycloak database"
  register: result
  ignore_errors: true
  command: |
    {{ ocadm }} -n {{ project_cockpit }} create secret generic keycloak-db
    --from-literal=keycloak-db-user={{ secrets.keycloak_db.db_user }}
    --from-literal=keycloak-db-password={{ secrets.keycloak_db.db_password }}
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'