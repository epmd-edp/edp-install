--- # Jenkins full installation
# The following step is a temporarary and it's going to be fixed next sprints
- name: "Get gerrit ssh port"
  shell: "{{ ocadm }} -n {{ project_cicd }} get configMap gerrit -o=jsonpath={.data.sshPort}"
  register: "gerrit_ssh_port"

- name: "Copy jobsprovisioning.groovy"
  template:
    src: "jobsprovisioning.j2"
    dest: "{{ templates_dir }}/jenkins/jobsprovisioning.groovy"

- name: "Creating configmap with job provisioning script"
  command: |
    {{ ocadm }} -n {{ project_cicd }} create configmap jobsprovisioning
    --from-file {{ templates_dir }}/jenkins/jobsprovisioning.groovy
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

- name: "Prepare scriptApproval"
  template:
    src: "scriptApproval.xml.j2"
    dest: "{{ templates_dir }}/jenkins/scriptApproval.xml"

- name: "Creating configmap with job provisioning script"
  command: |
    {{ ocadm }} -n {{ project_cicd }} create configmap jenkins-approval
    --from-file {{ templates_dir }}/jenkins/scriptApproval.xml
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

- name: "Creating configmap jenkins-init"
  command: |
    {{ ocadm }} -n {{ project_cicd }} create configmap jenkins-init
    --from-file {{ templates_dir }}/jenkins/init.groovy
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

# End of step

- name: "Install Jenkins app"
  command: |
    {{ ocadm }} -n {{ project_cicd }} new-app -f {{ templates_dir }}/jenkins/jenkins-{{ tools.jenkins.fs_type }}.yaml
    -p JENKINS_PASSWORD={{ tools.jenkins.password }}
    -p JENKINS_ENABLE_OAUTH={{ tools.jenkins.enable_oauth }}
    -p JENKINS_MAVEN_CACHE_VOLUME_CAPACITY={{ tools.jenkins.maven_cache_volume_capacity }}
    -p JENKINS_FRONTEND_IMAGE={{ tools.jenkins.frontend_image }}
    -p JENKINS_BACKEND_IMAGE={{ tools.jenkins.backend_image }}
    {{ '-p JENKINS_HOST_PATH_VOLUME=' + tools.jenkins.host_path_volume if tools.jenkins.fs_type=='hostpath' else '-p JENKINS_VOLUME_CAPACITY=' + tools.jenkins.volume_capacity }}
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'
