---
- include_tasks: enable-hideci.yml

- name: "Give rights to gerrit account"
  shell: "{{ ocadm }} -n {{ project_cicd }} adm policy add-scc-to-user anyuid -z gerrit"

- name: "Create gerrit service"
  shell: "{{ ocadm }} -n {{ project_cicd }} create -f {{ templates_dir }}/gerrit/gerrit-service.yaml"

- name: "Find created nodePort value for ssh port"
  shell: "{{ ocadm }} -n {{ project_cicd }} get svc gerrit -o=jsonpath='{.spec.ports[?(@.name==\"ssh\")].nodePort}'"
  register: "nodePort"

- name: "Update service gerrit with updated target ports for ssh"
  shell: "{{ ocadm }} -n {{ project_cicd }} patch svc gerrit --type='json' -p='[
  {\"op\":\"replace\", \"path\":\"/spec/ports/1/port\", \"value\":{{ nodePort.stdout }}},
  {\"op\":\"replace\", \"path\":\"/spec/ports/1/targetPort\", \"value\":{{ nodePort.stdout }}}]'"

- name: "Install Gerrit app"
  command: |
    {{ ocadm }} -n {{ project_cicd }} new-app -f {{ templates_dir }}/gerrit/gerrit.yaml
    -p GERRIT_VERSION={{ tools.gerrit.version }}
    -p GERRIT_DB_SECRET=gerrit-db
    -p GERRIT_DATA_CAPACITY={{ tools.gerrit.volume_capacity }}
    -p GERRIT_DB_CAPACITY={{ tools.gerrit.volume_db_capacity }}
    -p GERRIT_WEB_URL={{ tools.gerrit.web_url }}
    -p GERRIT_JOB_VERSION={{ tools.gerrit.job_version }}
    -p GITLAB_GROUP_HOST={{ gitlab_group_name | urlsplit('hostname') }}
    -p GITLAB_GROUP_PATH={{ gitlab_group_name | urlsplit('path') | regex_replace('^/{1}', '') }}
    -p GITLAB_PROJECT_NAME={{ project_gitlab_edp }}
    -p GITLAB_AUTOUSER_SECRET_NAME={{ gitlab_auto_user_secret }}
    -p GERRIT_SSH_PORT={{ nodePort.stdout }}
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'

- name: "Install Gerrit-to-Jenkins integration"
  command: |
    {{ ocadm }} -n {{ project_cicd }} new-app -f {{ templates_dir }}/gerrit/gerrit-integration.yaml
    -p GERRIT_JOB_VERSION={{ tools.gerrit.job_version }}
  register: result
  ignore_errors: true
  changed_when: '"already" not in result.stderr'
  failed_when:
    - 'result.rc != 0'
    - '"already" not in result.stderr'
