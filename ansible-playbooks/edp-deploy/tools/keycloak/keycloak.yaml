apiVersion: v1
kind: Template
metadata:
  name: keycloak
  annotations:
    description: Keycloak service with PostgreSQL database
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: keycloak
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: keycloak-db
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${KEYCLOAK_DB_CAPACITY}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: keycloak
    labels:
      app: keycloak
  spec:
    replicas: 1
    selector:
      name: keycloak
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    triggers:
    - type: ConfigChange
    template:
      metadata:
        labels:
          name: keycloak
      spec:
        initContainers:
        - name: init-keycloak-db
          image: busybox
          command: ["sh", "-c", "while ! nc -w 1 keycloak-db 5432 </dev/null; do echo waiting for keycloak-db; sleep 10; done;"]
        containers:
        - name: keycloak
          image: ${KEYCLOAK_IMAGE}
          ports:
          - containerPort: 8080
            protocol: TCP
          args:
          - "-b $(INTERNAL_POD_IP)"
          - "-Djgroups.bind_addr=global"
          - "-Djboss.node.name=$(INTERNAL_POD_IP)"
          env:
          - name: INTERNAL_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: KEYCLOAK_USER
            valueFrom:
              secretKeyRef:
                name: keycloak
                key: username
          - name: KEYCLOAK_PASSWORD
            valueFrom:
              secretKeyRef:
                name: keycloak
                key: password
          - name: POSTGRES_DATABASE
            value: keycloak-db
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: keycloak-db
                key: keycloak-db-user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: keycloak-db
                key: keycloak-db-password
          - name: POSTGRES_PORT_5432_TCP_ADDR
            value: keycloak-db
          - name: POSTGRES_PORT_5432_TCP_PORT
            value: '5432'
          - name: OPERATING_MODE
            value: clustered
          - name: PROXY_ADDRESS_FORWARDING
            value: "true"
          securityContext:
            privileged: false
        serviceAccount: keycloak
        restartPolicy: Always
        dnsPolicy: ClusterFirst
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: keycloak
    name: keycloak-db
  spec:
    replicas: 1
    selector:
      app: keycloak-db
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: keycloak-db
      spec:
        containers:
        - name: keycloak-db
          env:
          - name: POSTGRES_DB
            value: keycloak-db
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: keycloak-db
                key: keycloak-db-user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: keycloak-db
                key: keycloak-db-password
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          - name: POD_IP
            valueFrom: { fieldRef: { fieldPath: status.podIP } }
          image: postgres:9.6
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: 1Gi
          ports:
            - containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 5
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: keycloak-db
        serviceAccount: keycloak
        volumes:
          - name: keycloak-db
            persistentVolumeClaim:
              claimName: keycloak-db
- apiVersion: v1
  kind: Service
  metadata:
    name: keycloak
    labels:
      name: keycloak
  spec:
    ports:
    - protocol: TCP
      port: 8080
      name: keycloak
      targetPort: 8080
    selector:
      name: keycloak
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Service
  metadata:
    name: keycloak-db
    labels:
      app: keycloak-db
  spec:
    ports:
    - name: keycloak-db
      port: 5432
    selector:
      app: keycloak-db
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for Keycloak's service.
    name: keycloak
  spec:
    to:
      kind: Service
      name: keycloak
parameters:
- displayName: Keycloak version
  name: KEYCLOAK_IMAGE
  value: "jboss/keycloak:3.4.3.Final"
- displayName: Keycloak database Volume Capacity
  name: KEYCLOAK_DB_CAPACITY
  value: 2Gi